import java.awt.CardLayout;
import java.awt.Component;
import java.awt.Image;

import javax.swing.DefaultCellEditor;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JPanel;
import javax.swing.JTable;

import com.HIS.model.Doctor;
import com.HIS.view.DoctorEditorPanel;

class ButtonEditor extends DefaultCellEditor {
    private JButton button;
    private DoctorTableModel tableModel;
    private Doctor doctor;
    private DoctorEditorPanel editorPanel;
    private CardLayout cardLayout;
    private JPanel container;
    private JTable doctorTable;

    public ButtonEditor(JCheckBox checkBox, DoctorTableModel tableModel, CardLayout cardLayout, JPanel container, JTable doctorTable) {
        super(checkBox);
        
        // Load and resize the icon
        ImageIcon originalIcon = new ImageIcon("resources/edit_icon.png"); // Path to the icon
        Image resizedImage = originalIcon.getImage().getScaledInstance(16, 16, Image.SCALE_SMOOTH);
        ImageIcon resizedIcon = new ImageIcon(resizedImage);

        button = new JButton(resizedIcon);
        button.setOpaque(true);
        button.setContentAreaFilled(false); // Optional: Transparent background
        button.setBorderPainted(false);     // Optional: Remove border
        
        this.tableModel = tableModel;
        this.cardLayout = cardLayout;
        this.container = container;
        this.doctorTable = doctorTable;

        // Add ActionListener for button click
        button.addActionListener(e -> updateDoctorProfile());
    }

    private void updateDoctorProfile() {
        int row = doctorTable.getSelectedRow();
        doctor = tableModel.getDoctorAt(row);

        editorPanel = new DoctorEditorPanel(cardLayout, container, tableModel, doctor);
        container.add(editorPanel, "Doctor Editor Panel");
        cardLayout.show(container, "Doctor Editor Panel");
    }

    @Override
    public Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column) {
        return button;
    }

    @Override
    public Object getCellEditorValue() {
        return "Edit";
    }
}
